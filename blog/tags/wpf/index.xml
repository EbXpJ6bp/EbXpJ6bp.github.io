<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wpf on EbXpJ6bp&#39;s Blog</title>
    <link>http://ebxpj6bp.github.io/blog/tags/wpf/</link>
    <description>Recent content in Wpf on EbXpJ6bp&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 28 Oct 2015 19:39:58 +0900</lastBuildDate>
    <atom:link href="http://ebxpj6bp.github.io/blog/tags/wpf/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>C#でSplashWindow(Screen)を表示させる</title>
      <link>http://ebxpj6bp.github.io/blog/post/2015-10-28/</link>
      <pubDate>Wed, 28 Oct 2015 19:39:58 +0900</pubDate>
      
      <guid>http://ebxpj6bp.github.io/blog/post/2015-10-28/</guid>
      <description>

&lt;p&gt;スプラッシュ(スプラッシュスクリーン)を特定処理が終わったら自動的に閉じて切り替えたりする。&lt;/p&gt;

&lt;h2 id=&#34;スプラッシュ-スプラッシュスクリーン-とは:b29053ff5e3dc3ee8ed7aab801e3a548&#34;&gt;スプラッシュ(スプラッシュスクリーン)とは&lt;/h2&gt;

&lt;p&gt;スプラッシュ(スプラッシュスクリーン)は起動時に処理のかかるアプリケーションを起動させる場合、ユーザーの不安を無くすために読み込んでます感を出すために表示されることが多い。基本的に画面全体を覆う大きさではなく、中央に表示される。VisualStudio, OfficeなどMSのアプリには大抵あります。&lt;/p&gt;

&lt;p&gt;WPFにはスプラッシュスクリーンという機能がありますが、素早く表示され初期化が終わった時点で自動的に消えます。これは表示タイミングと表示を消すタイミングを作成側が指定することができません。そこでWindowを作成しそれをスプラッシュスクリーンとして扱いApp.xamlからそれを操作します。&lt;/p&gt;

&lt;h2 id=&#34;code:b29053ff5e3dc3ee8ed7aab801e3a548&#34;&gt;Code&lt;/h2&gt;

&lt;p&gt;App.xaml.cs&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public class App : Application
{       
    private SplashWindow _splash;
    public SplashWindow Splash { get; private set; }

    public App() : base()
    {
        Startup += Application_Startup;
    }

    private void Application_Startup(object sender, StartupEventArgs e){        
        Splash = new SplashWindow();
        Splash.Show();
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;MainWindow.xaml.cs&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public partial class MainWindow : Window
{
    public MainWindow()
    {
        InitializeComponent();

        Loaded += MainWindow_Loaded;
    }

    public void MainWindow_Loaded(object sender, RoutedEventArgs e)
    {
        var app = Application.Current as App;
        if (app == null || app.Splash == null) return;
        app.Splash.Close();
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;App.xamlでSplashを表示させ、MainWindowがロードし終わった時点でSplashWindowを閉じます。ですがこの閉じる動作は確実に行われるわけではないので不安ならusing等を使うとうまくいくかもしれません。&lt;/p&gt;

&lt;h2 id=&#34;ついで:b29053ff5e3dc3ee8ed7aab801e3a548&#34;&gt;ついで&lt;/h2&gt;

&lt;p&gt;スプラッシュスクリーンを任意のタイミングまで表示させたい場合は&lt;code&gt;System.Threading.Thread.Sleep&lt;/code&gt;を利用しスレッドを無理やり停止させます&lt;/p&gt;

&lt;p&gt;App.xaml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public partial class App : Application
{
    void App_Startup(object sender, StartupEventArgs e)
    {
        System.Threading.Thread.Sleep(3000);

        Main = new MainWindow();
        Main.Show();
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>